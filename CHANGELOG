## v0.2

* Created a Vanilla CLI renderer
* Created a Qt renderer
* Threading is no longer a requirement, but an optional feature
* Created a wrapper for threads, supporting boost and Qt threads and a threadless mode
* Updating script parsing for compatibility with Kiwi's output script
* The application is now agnostic to the location from which it's run
* Some dependencies are now optional:
  1) OIS
  2) Ogre
  3) Qt
  4) boost::thread
* Multiple patch server resolving
* Karazeh can patch itself! (tested on Linux only)

## v0.1

* Implemented the Patcher using boost::filesystem and bspatch, supporting 3 operations:
  - `CREATE`
  - `DELETE`
  - `MODIFY`
  - `RENAME`
* Implemented the Downloader using libcurl to fetch the patchlist and the entries
* CREATE operations now stage files in a temp directory just like MODIFY
* SIGINT and SIGKILL are now intercepted to cleanup before exit
* Patcher validates the repository's entries before committing the changes
* Optimized the fetching process: multiple files are now downloaded using the same connection when possible
* Support for launching the external application when the patcher is done
* Support for file persistency; partial patch downloads are not discarded now, but are kept until next execution
* Created an Ogre renderer using SdkTrays
* Renderers/frontends are pluggable and Karazeh is independent of them
* Application version is saved in an external resource file (this is not nice)
